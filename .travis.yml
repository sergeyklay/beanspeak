dist: xenial
sudo: required

language: php

php:
  - 'master'
  - '7.3.0RC1'
  - '7.2'
  - '7.1'
  - '7.0'

git:
  depth: 1

addons:
  apt:
    packages:
      - valgrind
      - gdb
      - libzip4
      - lcov

matrix:
  fast_finish: true
  allow_failures:
    - php: 'master'

cache:
  apt: true
  ccache: true
  timeout: 604800

compiler:
    - gcc

env:
  global:
    - CFLAGS="-ggdb -O0 -Wall -fvisibility=hidden"
    - ZEND_DONT_UNLOAD_MODULES=1
    - USE_ZEND_ALLOC=0

before_install:
  - echo -e 'variables_order=EGPCS\nenable_dl=true' >> "$(phpenv root)/versions/$(phpenv version-name)/etc/php.ini"
  - echo -e 'opcache.enable=0\nopcache.enable_cli=0' >> "$(phpenv root)/versions/$(phpenv version-name)/etc/php.ini"
  - export PHP_MAJOR="$(`phpenv which php` -r 'echo phpversion();' | cut -d '.' -f 1)"
  - export PHP_MINOR="$(`phpenv which php` -r 'echo phpversion();' | cut -d '.' -f 2)"
  - ulimit -c unlimited -S
  - sudo chmod +s $(which gdb)

install:
  - phpize
  - ./configure --with-php-config=$(phpenv which php-config) --enable-beanspeak CFLAGS="--coverage -fprofile-arcs -ftest-coverage $CFLAGS" LDFLAGS="--coverage"
  - make -j"$(getconf _NPROCESSORS_ONLN)"

before_script:
  - '[[ "${PHP_MAJOR}.${PHP_MINOR}" = "7.4" ]] || [[ "${PHP_MAJOR}.${PHP_MINOR}" = "7.3" ]] || export TESTS=-m'

script:
  - export NO_INTERACTION=1
  - export REPORT_EXIT_STATUS=1
  - export TEST_PHP_EXECUTABLE=$(phpenv which php)
  - make test

jobs:
  include:
    - stage: Compillers testing
      php: 7.2
      compiler: clang
      env:
        - CC=clang
        - TESTS=-m
      install:
        - phpize
        - ./configure --with-php-config=$(phpenv which php-config) --enable-beanspeak
        - make -j"$(getconf _NPROCESSORS_ONLN)"
      script:
        - export NO_INTERACTION=1
        - export REPORT_EXIT_STATUS=1
        - export TEST_PHP_EXECUTABLE=$(phpenv which php)
        - make test

after_failure:
  - $(phpenv which php) -v
  - $(phpenv which php) -m
  - for i in `find tests -name "*.out" 2>/dev/null`; do echo "-- START ${i}"; cat $i; echo "-- END"; done
  - for i in `find tests -name "*.mem" 2>/dev/null`; do echo "-- START ${i}"; cat $i; echo "-- END"; done
  - ./after_failure.sh

notifications:
  email: false
